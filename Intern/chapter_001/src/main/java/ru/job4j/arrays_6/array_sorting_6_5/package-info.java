/**
 * Created on 20.08.2018.
 *
 * @author Aleks Sidorenko (alek.sidorenko1979@gmail.com).
 * @version $Id$.
 * @since 0.1.
 */
package ru.job4j.arrays_6.array_sorting_6_5;

/*
6.5. Создать программу для сортировки массива методом перестановки. [#195]
  Администратор,  20.06.18 6:07
Требования к задаче:
1. Необходимо создать класс BubbleSort;
2. В классе BubbleSort написать метод public int[] sort(int[] array);
3. Метод должен сортировать массив целых чисел, используя алгоритм сортировки пузырьком;
4. В задании нельзя использовать дополнительный массив;
5. В классе BubbleSortTest напишите тест-метод, который будет проверять вашу программу;
6. В тестах можно сразу проверять целиком массив через метод assertThat(resultArray, is(expectArray));
7. Класс BubbleSort должен находиться в chapter_001\src\main\java\ru\job4j\array\BubbleSort.java;
8. Тест-класс BubbleSortTest должен находиться в chapter_001\src\test\java\ru\job4j\array\BubbleSortTest.java.
Пример:
Массив {5, 1, 2, 7, 3} после сортировки должен стать {1, 2, 3, 5, 7}

Подсказки к задаче (нажмите, чтобы развернуть):
Объяснение:
1. Вам необходимо реализовать метод sort, который принимает в себя массив неотсортированных целых чисел, а возвращает тот же самый массив, отсортированный с помощью алгоритма пузырька.
2. Алгоритм сортировки методом перестановок или "пузырька" состоит из повторяющихся проходов по сортируемому массиву. За каждый проход элементы последовательно сравниваются попарно и, если порядок в паре неверный, выполняется обмен элементов. При каждом проходе алгоритма по внутреннему циклу, очередной наибольший элемент массива ставится на своё место в конце массива рядом с предыдущим «наибольшим элементом», а наименьший элемент перемещается на одну позицию к началу массива («всплывает» до нужной позиции, как пузырёк в воде, отсюда и название алгоритма).


Типовые ошибки:
"Выходит ошибка ArrayOutOfIndexException" - вы обращаетесь к элементу за пределами массива. Первый элемент массива имеет индекс 0, поэтому попытка обратиться к последнему элементу массива через array[array.length] будет всегда выбрасывать исключение. Например массив {0, 1} имеет длину 2, но последний элемент массива имеет индекс 1.
Каркас тест-класса:
package ru.job4j.array;

import org.junit.Test;

import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertThat;

public class BubbleSortTest {
    @Test
    public void whenSortArrayWithTenElementsThenSortedArray() {
        //напишите здесь тест, проверяющий сортировку массива из 10 элементов методом пузырька, например {1, 5, 4, 2, 3, 1, 7, 8, 0, 5}.
    }
}
Что не нужно делать:
1. Здесь не надо использовать Scanner, System.in, System.out.println;
2. В программе не должно быть ввода и вывода данных;
3. Не надо создавать метод public static void main(String[] args) - так вы занимаетесь ручным тестированием. В курсе используется только автоматическое тестирование за счет JUnit;
4. В классах не надо добавлять методы get set;
5. В тест-классе не надо проверять через цикл каждую ячейку;
6. Нельзя пользоваться готовыми методами для сортировки (например Arrays.sort(array)), вам необходимо самим написать алгоритм сортировки.

Задание.

1. В папке со своим именем создайте задачу c именем этой задачи.
2. Заполните поле исходный код - укажите там ссылку на коммит к этой задаче.
3. Выполните операцию начать и укажите отвественного Петра Арсентьева.
4. Переходите к следующей задаче.
 */