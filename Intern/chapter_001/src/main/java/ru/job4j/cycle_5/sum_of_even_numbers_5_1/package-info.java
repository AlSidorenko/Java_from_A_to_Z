/**
 * Created on 10.08.2018.
 *
 * @author Aleks Sidorenko (alek.sidorenko1979@gmail.com).
 * @version $Id$.
 * @since 0.1.
 */
package ru.job4j.cycle_5.sum_of_even_numbers_5_1;

/*
5.1. Подсчет суммы чётных чисел в диапазоне [#192]
 Администратор, 20.06.18 5:23
Требования к задаче:
1. Необходимо создать класс Counter;
2. В классе Counter написать метод public int add(int start, int finish) {};
3. Метод должен вычислять сумму четных чисел в диапазоне от start до finish;
4. Класс Counter должен находиться в chapter_001\src\main\java\ru\job4j\loop\Counter.java;
5. Тест-класс CounterTest должен находиться в chapter_001\src\test\java\ru\job4j\loop\CounterTest.java;
6. В классе CounterTest напишите тест-метод, который будет проверять вашу программу.
Пример:
Для диапазона значений от 1 до 10, метод add должен вернуть сумму чётных чисел, равную 30 (2 + 4 + 6 + 8 + 10).

Подсказки к задаче (нажмите, чтобы развернуть):
Объяснение:
1. Вы должны, используя цикл for, пройтись по всему диапазону значений от start до finish включительно и сложить сумму всех чётных значений.
2. Для определения, что число чётное - используйте операцию вычисления остатка от деления (%).
Типовые ошибки:
1. "Метод возвращает сумму всех чётных значений, но последнее не включает" - ошибка в условии цикла for. Для включения последнего числа в диапазон вместо знака <, используйте <=.
2. "Метод всегда возвращает 0 или последнее число в диапазоне" - вам необходимо суммировать все значения в какую-то временную переменную, которую в конце необходимо вернуть из метода.
Каркас тест-класса:
package ru.job4j.loop;
import org.junit.Test;
import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertThat;
public class CounterTest {
    @Test
    public void whenSumEvenNumbersFromOneToTenThenThirty() {
        //напишите здесь тест, проверяющий, что сумма чётных чисел от 1 до 10 при вызове метода counter.add будет равна 30.
    }
}
Что не нужно делать:
1. Здесь не надо использовать Scanner, System.in, System.out.println.
2. В программе не должно быть ввода и вывода данных.
3. Не надо создавать метод public static void main(String[] args) - так вы занимаетесь ручным тестированием. В курсе используется только автоматическое тестирование за счет JUnit.
4. В классах не надо добавлять методы get set.
Задание.

1. В папке со своим именем создайте задачу c именем этой задачи.
2. Заполните поле исходный код - укажите там ссылку на коммит к этой задаче.
3. Выполните операцию начать и укажите отвественного Петра Арсентьева.
4. Переходите к следующей задаче.
 */